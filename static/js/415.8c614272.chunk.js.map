{"version":3,"file":"static/js/415.8c614272.chunk.js","mappings":"wMAEaA,E,QAAeC,GAAAA,IAAH,8C,SCEZC,EAAS,kBACpB,UAACF,EAAD,YACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,oBACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,IATb,cADoB,C,4FCDTC,GAAYV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,wLASTY,EAAOZ,EAAAA,GAAAA,GAAH,8H,mBCRJa,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEnBC,GAAWC,EAAAA,EAAAA,MAElB,OACE,4BACE,SAACJ,EAAD,UACGE,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAACT,EAAD,CAAWU,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA/C,SAA6DI,KADtDD,EAIZ,OAEH,SAAC,KAAD,MAGL,C,6FCSD,UA1Ba,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJN,EAAUM,EAAeC,QAC1B,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,SAAQ,WACPV,GAAW,EACZ,GACJ,GAAE,KAGD,+BACE,4BACE,4CACA,SAAC,IAAD,CAAWZ,OAAQA,IAClBW,IAAW,SAAC,IAAD,QAInB,C,mMC5BKY,EAAW,+BACXC,EAAU,mCACVC,EAAS,UAAMF,EAAN,wBACTG,EAAU,UAAMH,EAAN,iBACVI,EAAU,UAAMJ,EAAN,UAEHK,EAAiB,mCAAG,WAAOC,GAAP,gGAERC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,oBAAmCF,EAAnC,iCAAmEK,EAAnE,gCAFQ,cAEzBE,EAFyB,yBAGxBA,EAASC,MAHe,gCAK7BZ,QAAQD,MAAM,KAAMc,SALS,yDAAH,sDASjBnB,EAAmB,mCAAG,6GAERgB,EAAAA,EAAAA,IAAA,UAAaL,EAAb,oBAAkCD,EAAlC,YAFQ,cAEzBO,EAFyB,yBAG1BA,EAASC,MAHiB,gCAK9BZ,QAAQD,MAAM,KAAMc,SALU,yDAAH,qDAUnBC,EAAiB,mCAAG,WAAO9B,GAAP,gGAEN0B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,YAA2BvB,EAA3B,oBAAyCoB,EAAzC,oBAFM,cAEvBO,EAFuB,yBAGtBA,EAASC,MAHa,gCAM7BZ,QAAQD,MAAM,KAAMc,SANS,yDAAH,sDAWjBE,EAAc,mCAAG,WAAO/B,GAAP,gGAEH0B,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BnB,EAA/B,4BAAqDoB,EAArD,oBAFG,cAEpBO,EAFoB,yBAGnBA,EAASC,MAHU,gCAM1BZ,QAAQD,MAAM,KAAMc,SANM,yDAAH,sDAWdG,EAAiB,mCAAG,WAAOhC,GAAP,gGAEN0B,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BnB,EAA/B,4BAAqDoB,EAArD,oBAFM,cAEvBO,EAFuB,yBAGtBA,EAASC,MAHa,gCAK7BZ,QAAQD,MAAM,KAAMc,SALS,yDAAH,qD","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/searchAPI.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const LoaderStyled = styled.div`\n  margin: 100px;\n  \n`","import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { LoaderStyled } from './Loader.styled';\n\nexport const Loader = () => (\n  <LoaderStyled>\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"rgb(249, 121, 48)\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n    Load More\n  </LoaderStyled>\n);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  padding: 2px 8px;\n  &:hover {\n    border-radius: 5px;\n    box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n  }\n`;\nexport const List = styled.ul`\n  padding: 20px 0 20px;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieLink, List } from './MoviesList.styled';\nimport {  Outlet, useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n\n   const location = useLocation();\n\n  return (\n    <div>\n      <List>\n        {movies.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }} >{title}</MovieLink>\n            </li>\n          );\n        })}\n      </List>\n      <Outlet />\n    </div>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'services/searchAPI';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchTrendingMovies()\n      .then(responseMovies => {\n        setMovies(responseMovies.results);\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div>\n        <h1>Trending today</h1>\n        <MovieList movies={movies} />\n        {loading && <Loader />}\n      </div>\n    </>\n  );\n};\nexport default Home;\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '37314a167a558e9a6582597c5654a5d7';\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst DETALS_URL = `${BASE_URL}/movie`;\n\nexport const fetchSearchMovies = async (query) => {\ntry {\n  const response = await axios.get(`${SEARCH_URL}?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n  return response.data;\n  }catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${TREND_URL}?api_key=${API_KEY}&page=1`) \n  return response.data;\n  } catch (error) {\n     console.error(error.message);\n  }\n  \n};\n\nexport const fetchMovieDetails = async (id) => {\n  try {\n    const response = await axios.get(`${DETALS_URL}/${id}?api_key=${API_KEY}&language=en-US`) \n    return response.data;\n    \n  } catch (error) {\n    console.error(error.message);\n  }\n \n};\n\nexport const fetchMovieCast = async (id) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`) \n    return response.data;\n    \n  } catch (error) {\n    console.error(error.message);\n  }\n \n};\n\nexport const fetchMovieReviews = async (id) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`) \n    return response.data\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n"],"names":["LoaderStyled","styled","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","MovieLink","Link","List","MovieList","movies","location","useLocation","map","id","title","to","state","from","useState","setMovies","loading","setLoading","useEffect","fetchTrendingMovies","then","responseMovies","results","catch","error","console","log","finally","BASE_URL","API_KEY","TREND_URL","SEARCH_URL","DETALS_URL","fetchSearchMovies","query","axios","response","data","message","fetchMovieDetails","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}