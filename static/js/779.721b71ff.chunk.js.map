{"version":3,"file":"static/js/779.721b71ff.chunk.js","mappings":"uPAGaA,EAAQC,EAAAA,GAAAA,GAAH,8DAILC,EAAOD,EAAAA,GAAAA,EAAH,0C,SC0BjB,EA5BgB,WACd,OAAuCE,EAAAA,EAAAA,UAAS,IAAhD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,SAAAC,GAC9BN,EAAeM,EAAqBC,QACrC,GACF,GAAE,CAACN,KAGF,8BACGF,EAAe,EACdA,EAAaS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OACE,2BACE,SAAChB,EAAD,UAAQe,KACR,SAACb,EAAD,UAAOc,MAFAF,EAKZ,KAED,SAACZ,EAAD,gEAIP,C,mMC7BKe,EAAW,+BACXC,EAAU,mCACVC,EAAS,UAAMF,EAAN,wBACTG,EAAU,UAAMH,EAAN,iBACVI,EAAU,UAAMJ,EAAN,UAEHK,EAAiB,mCAAG,WAAOC,GAAP,gGAERC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,oBAAmCF,EAAnC,iCAAmEK,EAAnE,gCAFQ,cAEzBE,EAFyB,yBAGxBA,EAASC,MAHe,gCAK7BC,QAAQC,MAAM,KAAMC,SALS,yDAAH,sDASjBC,EAAmB,mCAAG,6GAERN,EAAAA,EAAAA,IAAA,UAAaL,EAAb,oBAAkCD,EAAlC,YAFQ,cAEzBO,EAFyB,yBAG1BA,EAASC,MAHiB,gCAK9BC,QAAQC,MAAM,KAAMC,SALU,yDAAH,qDAUnBE,EAAiB,mCAAG,WAAOjB,GAAP,gGAENU,EAAAA,EAAAA,IAAA,UAAaH,EAAb,YAA2BP,EAA3B,oBAAyCI,EAAzC,oBAFM,cAEvBO,EAFuB,yBAGtBA,EAASC,MAHa,gCAM7BC,QAAQC,MAAM,KAAMC,SANS,yDAAH,sDAWjBG,EAAc,mCAAG,WAAOlB,GAAP,gGAEHU,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BH,EAA/B,4BAAqDI,EAArD,oBAFG,cAEpBO,EAFoB,yBAGnBA,EAASC,MAHU,gCAM1BC,QAAQC,MAAM,KAAMC,SANM,yDAAH,sDAWdpB,EAAiB,mCAAG,WAAOK,GAAP,gGAENU,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BH,EAA/B,4BAAqDI,EAArD,oBAFM,cAEvBO,EAFuB,yBAGtBA,EAASC,MAHa,gCAK7BC,QAAQC,MAAM,KAAMC,SALS,yDAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/searchAPI.js"],"sourcesContent":["import styled from \"styled-components\";\n\n\nexport const Autor = styled.li`\nfont-size: 20px;\nfont-weight: bold;\n`\nexport const Text = styled.p`\nfont-size: 20px;\n`","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/searchAPI';\nimport { Autor, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReview] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(responseMovieReviews => {\n      setMovieReview(responseMovieReviews.results);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {movieReviews > 0 ? (\n        movieReviews.map(({ id, author, content }) => {\n          return (\n            <ul key={id}>\n              <Autor>{author}</Autor>\n              <Text>{content}</Text>\n            </ul>\n          );\n        })\n      ) : (\n        <Text>Sorry, we dont have any review for this movie :(</Text>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '37314a167a558e9a6582597c5654a5d7';\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst DETALS_URL = `${BASE_URL}/movie`;\n\nexport const fetchSearchMovies = async (query) => {\ntry {\n  const response = await axios.get(`${SEARCH_URL}?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n  return response.data;\n  }catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${TREND_URL}?api_key=${API_KEY}&page=1`) \n  return response.data;\n  } catch (error) {\n     console.error(error.message);\n  }\n  \n};\n\nexport const fetchMovieDetails = async (id) => {\n  try {\n    const response = await axios.get(`${DETALS_URL}/${id}?api_key=${API_KEY}&language=en-US`) \n    return response.data;\n    \n  } catch (error) {\n    console.error(error.message);\n  }\n \n};\n\nexport const fetchMovieCast = async (id) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`) \n    return response.data;\n    \n  } catch (error) {\n    console.error(error.message);\n  }\n \n};\n\nexport const fetchMovieReviews = async (id) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`) \n    return response.data\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n"],"names":["Autor","styled","Text","useState","movieReviews","setMovieReview","movieId","useParams","useEffect","fetchMovieReviews","then","responseMovieReviews","results","map","id","author","content","BASE_URL","API_KEY","TREND_URL","SEARCH_URL","DETALS_URL","fetchSearchMovies","query","axios","response","data","console","error","message","fetchTrendingMovies","fetchMovieDetails","fetchMovieCast"],"sourceRoot":""}