{"version":3,"file":"static/js/387.007ce5d1.chunk.js","mappings":"gQAEaA,EAAgBC,EAAAA,GAAAA,IAAH,gHASbC,EAAYD,EAAAA,GAAAA,IAAH,qO,SC0BtB,EA/Ba,WACX,OAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAASI,MAAK,SAAAC,GAC3BN,EAAaM,EAAkBC,KAChC,GACF,GAAE,CAACN,KAGF,SAACN,EAAD,UACGI,EAAUS,OAAS,EAClBT,EAAUU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACZ,UAAChB,EAAD,WACGc,GAAe,gBACdG,IAAG,yCAAoCH,GACvCI,IAAKH,EACLI,MAAO,OACJ,SAAC,MAAD,CAAYC,KAAM,OACvB,8BAAI,uBAAIL,IAAR,QACA,wCAAgBC,OAPFH,EADJ,KAYd,wDAIP,C,mMCjCKQ,EAAW,+BACXC,EAAU,mCACVC,EAAS,UAAMF,EAAN,wBACTG,EAAU,UAAMH,EAAN,iBACVI,EAAU,UAAMJ,EAAN,UAEHK,EAAiB,mCAAG,WAAOC,GAAP,gGAERC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,oBAAmCF,EAAnC,iCAAmEK,EAAnE,gCAFQ,cAEzBE,EAFyB,yBAGxBA,EAASC,MAHe,gCAK7BC,QAAQC,MAAM,KAAMC,SALS,yDAAH,sDASjBC,EAAmB,mCAAG,6GAERN,EAAAA,EAAAA,IAAA,UAAaL,EAAb,oBAAkCD,EAAlC,YAFQ,cAEzBO,EAFyB,yBAG1BA,EAASC,MAHiB,gCAK9BC,QAAQC,MAAM,KAAMC,SALU,yDAAH,qDAUnBE,EAAiB,mCAAG,WAAOtB,GAAP,gGAENe,EAAAA,EAAAA,IAAA,UAAaH,EAAb,YAA2BZ,EAA3B,oBAAyCS,EAAzC,oBAFM,cAEvBO,EAFuB,yBAGtBA,EAASC,MAHa,gCAM7BC,QAAQC,MAAM,KAAMC,SANS,yDAAH,sDAWjB1B,EAAc,mCAAG,WAAOM,GAAP,gGAEHe,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BR,EAA/B,4BAAqDS,EAArD,oBAFG,cAEpBO,EAFoB,yBAGnBA,EAASC,MAHU,gCAM1BC,QAAQC,MAAM,KAAMC,SANM,yDAAH,sDAWdG,EAAiB,mCAAG,WAAOvB,GAAP,gGAENe,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BR,EAA/B,4BAAqDS,EAArD,oBAFM,cAEvBO,EAFuB,yBAGtBA,EAASC,MAHa,gCAK7BC,QAAQC,MAAM,KAAMC,SALS,yDAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/searchAPI.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastContainer = styled.div`\ndisplay: flex;\ngap: 30px;\nflex-wrap: wrap;\ndisplay: flex;\npadding: 0px 0px 30px;\n\n`\n\nexport const Container = styled.div`\nwidth: 200px;\ntext-align: center;\nborder-radius: 10px;\nbox-shadow: rgb(9 30 66 / 25%) 0px 4px 8px -2px, rgb(9 30 66 / 8%) 0px 0px 0px 1px;\ntransition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n`","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/searchAPI';\nimport { CiImageOff } from 'react-icons/ci'\nimport { CastContainer, Container  } from './Cast.styled'\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieCast(movieId).then(responceMovieCast => {\n      setMovieCast(responceMovieCast.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <CastContainer>\n      {movieCast.length > 0 ? (\n        movieCast.map(({ id, profile_path, name, character }) => (\n          <Container key={id}>\n            {profile_path ? <img\n              src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n              alt={name}\n              width={100} \n            /> : <CiImageOff size={100} /> }\n            <p> <b>{name}</b> </p>\n            <p> Character: {character}</p>\n          </Container>\n        ))\n      ) : (\n        <p>Sorry, there isn't any info</p>\n      )}\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '37314a167a558e9a6582597c5654a5d7';\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst DETALS_URL = `${BASE_URL}/movie`;\n\nexport const fetchSearchMovies = async (query) => {\ntry {\n  const response = await axios.get(`${SEARCH_URL}?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n  return response.data;\n  }catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${TREND_URL}?api_key=${API_KEY}&page=1`) \n  return response.data;\n  } catch (error) {\n     console.error(error.message);\n  }\n  \n};\n\nexport const fetchMovieDetails = async (id) => {\n  try {\n    const response = await axios.get(`${DETALS_URL}/${id}?api_key=${API_KEY}&language=en-US`) \n    return response.data;\n    \n  } catch (error) {\n    console.error(error.message);\n  }\n \n};\n\nexport const fetchMovieCast = async (id) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`) \n    return response.data;\n    \n  } catch (error) {\n    console.error(error.message);\n  }\n \n};\n\nexport const fetchMovieReviews = async (id) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`) \n    return response.data\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n"],"names":["CastContainer","styled","Container","useState","movieCast","setMovieCast","movieId","useParams","useEffect","fetchMovieCast","then","responceMovieCast","cast","length","map","id","profile_path","name","character","src","alt","width","size","BASE_URL","API_KEY","TREND_URL","SEARCH_URL","DETALS_URL","fetchSearchMovies","query","axios","response","data","console","error","message","fetchTrendingMovies","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}